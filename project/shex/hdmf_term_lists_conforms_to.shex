BASE <https://w3id.org/hdmf-dev/hdmf-term-lists/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:dateTime

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Curie xsd:string

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

<ElectricalArray>  (
    CLOSED {
       (  $<ElectricalArray_tes> (  <time> @<TimestampSeries> ? ;
             <electrode> @<ElectrodeSeries> ? ;
             <values> @linkml:Float ?
          ) ;
          rdf:type [ <ElectricalArray> ] ?
       )
    } OR @<IrregularlySampledElectricalArray> OR @<RegularlySampledElectricalArray>
)

<Electrode> CLOSED {
    (  $<Electrode_tes> (  <name> @linkml:String ? ;
          <impedance> @linkml:Float ?
       ) ;
       rdf:type [ <Electrode> ] ?
    )
}

<ElectrodeSeries> CLOSED {
    (  $<ElectrodeSeries_tes> (  <name> @linkml:String ;
          <values> @<Electrode> +
       ) ;
       rdf:type [ <ElectrodeSeries> ]
    )
}

<IrregularlySampledElectricalArray> CLOSED {
    (  $<IrregularlySampledElectricalArray_tes> (  &<ElectricalArray_tes> ;
          rdf:type [ <ElectricalArray> ] ? ;
          <time> @<IrregularlySampledTimestampSeries> ?
       ) ;
       rdf:type [ <IrregularlySampledElectricalArray> ] ?
    )
}

<IrregularlySampledTimestampSeries> CLOSED {
    (  $<IrregularlySampledTimestampSeries_tes> (  &<TimestampSeries_tes> ;
          rdf:type [ <TimestampSeries> ] ? ;
          <name> @linkml:String ;
          <values> @linkml:Float +
       ) ;
       rdf:type [ <IrregularlySampledTimestampSeries> ]
    )
}

<RegularlySampledElectricalArray> CLOSED {
    (  $<RegularlySampledElectricalArray_tes> (  &<ElectricalArray_tes> ;
          rdf:type [ <ElectricalArray> ] ? ;
          <time> @<RegularlySampledTimestampSeries> ?
       ) ;
       rdf:type [ <RegularlySampledElectricalArray> ] ?
    )
}

<RegularlySampledTimestampSeries> CLOSED {
    (  $<RegularlySampledTimestampSeries_tes> (  &<TimestampSeries_tes> ;
          rdf:type [ <TimestampSeries> ] ? ;
          <name> @linkml:String ;
          <sampling_rate> @linkml:Float ;
          <starting_time> @linkml:Float ;
          <length> @linkml:Integer ? ;
          <values> @linkml:Float *
       ) ;
       rdf:type [ <RegularlySampledTimestampSeries> ]
    )
}

<TimestampSeries>  (
    CLOSED {
       (  $<TimestampSeries_tes> rdf:type . * ;
          rdf:type [ <TimestampSeries> ] ?
       )
    } OR @<IrregularlySampledTimestampSeries> OR @<RegularlySampledTimestampSeries>
)


